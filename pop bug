phoneNumber: contactDetails?.["mobile"]?.startsWith("+971")
  ? `Mobile +971 ${contactDetails["mobile"].slice(4)}`
  : `Mobile ${contactDetails?.["mobile"]}`



return(
     <div>
                  <h3 className="payee-detail-heading">
                    Payee details in Aani
                  </h3>
                  <ContactCard
                    contact={{
                      fullName: contactDetails?.["masked-name"],
                      phoneNumber: `Mobile ${contactDetails?.["mobile"]}`,
                    }}
                    onClick={() => {}}
                  />
                </div>
)





const rawMobile = contactDetails?.["mobile"] || "";

// Check if the number starts with + and has at least 6 more digits
let formattedMobile = rawMobile;

if (/^\+\d{1,4}\d{6,}$/.test(rawMobile)) {
  const countryCode = rawMobile.match(/^\+\d{1,4}/)[0]; // extract +971
  const number = rawMobile.slice(countryCode.length);   // extract rest of the number
  formattedMobile = ${countryCode} ${number};
}

const phonenumber = Mobile ${formattedMobile};




const handleSelect = (purpose) => {
  setSelectedPurpose(purpose); // (local state if you have one)
  props.setPurposeOfTransfer(purpose); // send to SendMoney
  props.actionOnPOT(false); // close the modal or overlay
};

{props.purposeOfTransfers.map((item, index) => (
  <div
    key={index}
    onClick={() => handleSelect(item)}
    className="purpose-item"
  >
    {item["pop-desc"]}
  </div>
))}


interface Props {
  purposeOfTransfers: any[];
  setPurposeOfTransfer: (val: any) => void;
  actionOnPOT: (flag: boolean) => void;
  module?: string;
}


<PurposeOfTransfer
  purposeOfTransfers={purposeOfTransfers}
  setPurposeOfTransfer={setPurposeOfTransfer}
  actionOnPOT={actionOnPOT}
  module="SM"
/>
